## ---- Q2_setup, eval=TRUE, echo=FALSE-----------------------------------------
DSdata <- read_csv("../Data/DataScienceData.csv")


## ---- Q2_Jobtitlegroups-------------------------------------------------------

Scientists <- c("Statistician", "Data Scientist", "Machine Learning Engineer", "Predictive Modeler", "Scientist/Researcher")
ResearchAnalyst <- c("Data Analyst", "Business Analyst", "Data Miner", "Researcher")
Engineer <- c("Software Developer/Software Engineer", "Programmer", "Computer Scientist", "Operations Research Practitioner", "Engineer", "DBA/Database Engineer")


## ----Q2_data------------------------------------------------------------------
DSdata1 <- DSdata[,] 
DSdata1$CapSalary <- if_else(DSdata1$CompensationYearUSD > 500000, 500000, DSdata1$CompensationYearUSD)
DSdata2 <- DSdata1[DSdata1$CompensationYearUSD >= 20000,]
DSdata2 <- DSdata2 %>% filter(LanguageRecommendationSelect %in% c('SQL', 'Python', 'R'))
DSdata2$JobTitleGroup <- if_else(DSdata2$CurrentJobTitleSelect %in% Scientists, "Scientist", if_else(DSdata2$CurrentJobTitleSelect %in% ResearchAnalyst,'ResearchAnalyst',if_else(DSdata2$CurrentJobTitleSelect %in% Engineer, 'Engineer', 'Other'))) 
DSdata1$JobTitleGroup <- if_else(DSdata1$CurrentJobTitleSelect %in% Scientists, "Scientist", if_else(DSdata1$CurrentJobTitleSelect %in% ResearchAnalyst,'ResearchAnalyst',if_else(DSdata1$CurrentJobTitleSelect %in% Engineer, 'Engineer', 'Other'))) 

DSdata2 <- DSdata2 %>% arrange(desc(JobTitleGroup))


## ---- Q2_table-jobs-----------------------------------------------------------
table(DSdata2$JobTitleGroup) %>%
  knitr::kable()


## ---- Q2_job-den-bp-figures-general-------------------------------------------

density.gen.jobs <- DSdata2%>%
  ggplot(aes(x=CapSalary, fill = JobTitleGroup, color = JobTitleGroup))+ geom_density(alpha = .3)+ labs(x ='Annual Salary in USD') + scale_x_log10(labels = dollar) + theme(axis.title.y = element_blank())

boxplot.gen.jobs <- DSdata2 %>%
  ggplot(aes(y=CapSalary, x=JobTitleGroup)) + geom_boxplot() + labs(y = "Annual Salary in USD") + theme(axis.title.x=element_blank(),axis.title.y = element_text(size=8)) + scale_y_log10(labels = dollar)

plot.jobs <- ggarrange(boxplot.gen.jobs, density.gen.jobs,
          ncol = 1, nrow = 2)

hist.gen.jobs <- DSdata2%>%
  ggplot(aes(x=CapSalary, fill = JobTitleGroup, color = JobTitleGroup))+ geom_histogram(alpha = .5, bins= 10)+ labs(x ='Annual Salary in USD') + scale_x_log10(labels = dollar) + theme(axis.title.y = element_blank()) + annotate("text", x = rep(300000,5), y = c(550,500,450,400,350), label = c(paste('Title  |',"Count"),paste('Eng: ',dim(DSdata2[DSdata2$JobTitleGroup=='Engineer',])[1]),paste('Oth: ',dim(DSdata2[DSdata2$JobTitleGroup=='Other',])[1]),paste('Res: ',dim(DSdata2[DSdata2$JobTitleGroup=='ResearchAnalyst',])[1]),paste('Sci:',dim(DSdata2[DSdata2$JobTitleGroup=='Scientist',])[1])),size=4)



## ---- Q2_lang-den-bp-figures-general------------------------------------------

density.gen.lang <- DSdata2%>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_density(alpha = .3)+ labs(x ='Annual Salary in USD', color = "Language", fill = "Language") + scale_x_log10(labels=dollar) + theme(axis.title.y = element_blank()) 

boxplot.gen.lang <- DSdata2 %>%
  ggplot(aes(y=CapSalary, x=LanguageRecommendationSelect)) + geom_boxplot() + labs(y = "Annual Salary in USD") + theme(axis.title.x=element_blank(),axis.title.y =  element_text(size=8)) + scale_y_log10(labels = dollar) 

plot.lang <- ggarrange(boxplot.gen.lang, density.gen.lang,
          ncol = 1, nrow = 2)

hist.gen.lang <- DSdata2%>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_histogram(alpha = .5, bins= 10)+ labs(x ='Annual Salary in USD') + scale_x_log10(labels = dollar) + theme(axis.title.y = element_blank()) + annotate("text", x = rep(300000,4), y = c(550,500,450,400), label = c(paste('Lang |',"Count"),paste('Pth: ',dim(DSdata2[DSdata2$LanguageRecommendationSelect=='Python',])[1]),paste('R : ',dim(DSdata2[DSdata2$LanguageRecommendationSelect=='R',])[1]),paste('SQL: ',dim(DSdata2[DSdata2$LanguageRecommendationSelect=='SQL',])[1])),size=4)


## ---- group-plots-------------------------------------------------------------
plot.jobs
plot.lang


## ---- Q2_histogram_jobs, echo= FALSE, message=FALSE---------------------------

hist.gen.jobs <- DSdata2%>%
  ggplot(aes(x=CapSalary, fill = JobTitleGroup, color = JobTitleGroup))+ geom_histogram(alpha = .5, bins= 10)+ labs(x ='Annual Salary in USD') + scale_x_log10(labels = dollar) + theme(axis.title.y = element_blank()) + annotate("text", x = rep(300000,5), y = c(550,500,450,400,350), label = c(paste('Title  |',"Count"),paste('Eng: ',dim(DSdata2[DSdata2$JobTitleGroup=='Engineer',])[1]),paste('Oth: ',dim(DSdata2[DSdata2$JobTitleGroup=='Other',])[1]),paste('Res: ',dim(DSdata2[DSdata2$JobTitleGroup=='ResearchAnalyst',])[1]),paste('Sci:',dim(DSdata2[DSdata2$JobTitleGroup=='Scientist',])[1])),size=4)


## ---- Q2_test-general---------------------------------------------------------
anova.gen.jobs <- summary(aov(CapSalary ~ JobTitleGroup, data= DSdata2))

anova.gen.lang <- summary(aov(CapSalary ~ LanguageRecommendationSelect, data= DSdata2))


## ---- Q2_setup-dfs, message=F, warning=F--------------------------------------
# setting up individual datasets for each job title group
scidf <- DSdata2 %>%
  filter(!is.na(CompensationYearUSD), CompensationYearUSD >= 20000, JobTitleGroup == 'Scientist', LanguageRecommendationSelect == c('SQL', 'Python', 'R'))

engdf <- DSdata2 %>%
  filter(!is.na(CompensationYearUSD), CompensationYearUSD >= 20000, JobTitleGroup == 'Engineer', LanguageRecommendationSelect == c('SQL', 'Python', 'R'))

resanldf <- DSdata2 %>%
  filter(!is.na(CompensationYearUSD), CompensationYearUSD >= 20000, JobTitleGroup == 'ResearchAnalyst' , LanguageRecommendationSelect == c('SQL', 'Python', 'R'))

otherdf <- DSdata2 %>%
  filter(!is.na(CompensationYearUSD), CompensationYearUSD >= 20000, JobTitleGroup == 'Other', LanguageRecommendationSelect == c('SQL', 'Python', 'R'))



## ---- Q2_density-fig-Job------------------------------------------------------

sciden <- scidf %>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_density(alpha = .3) + scale_x_log10(labels=dollar) + ggtitle('Scientist Title') + theme(axis.title.x=element_blank(), axis.title.y = element_blank(), legend.position = "none")

engden <- engdf %>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_density(alpha = .3) + scale_x_log10(labels=dollar) + ggtitle('Engineer Title') + theme(axis.title.x=element_blank(), axis.title.y = element_blank(), legend.position = "none")

resden <- resanldf %>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_density(alpha = .3) + scale_x_log10(labels=dollar) + ggtitle('Research Analyst Title') + theme(axis.title.x=element_blank(), axis.title.y = element_blank(), legend.position = "none")

othden <- otherdf %>%
  ggplot(aes(x=CapSalary, fill = LanguageRecommendationSelect, color = LanguageRecommendationSelect))+ geom_density(alpha = .3) + scale_x_log10(labels=dollar) + ggtitle('Other Title') + theme(axis.title.x=element_blank(), axis.title.y = element_blank(), legend.position = "none")

density.jobs <- ggarrange(sciden, engden, resden, othden,
          ncol = 2, nrow = 2, common.legend = T, legend = 'top') 

density.final.job <- annotate_figure(density.jobs, 
                top = text_grob("Distribution of Annual Salary USD", color = "black", face = "bold", size = 14),
                bottom = text_grob("Annual Salary in USD", color = "black"),
                left = text_grob("Density", 
                                 color ="black", rot = 90))

density.final.job


## ---- Q2_boxplot-Title--------------------------------------------------------

scibox <- scidf %>%
  ggplot(aes(y=CapSalary, x=LanguageRecommendationSelect)) + geom_boxplot()+ theme(axis.title.x=element_blank(), axis.title.y = element_blank()) + scale_y_log10(labels=dollar) + ggtitle('Scientist')

engbox <- engdf %>%
  ggplot(aes(y=CapSalary, x=LanguageRecommendationSelect)) + geom_boxplot()+ theme(axis.title.x=element_blank(), axis.title.y = element_blank()) + scale_y_log10(labels=dollar) + ggtitle('Engineer')

resbox <- resanldf %>%
  ggplot(aes(y=CapSalary, x=LanguageRecommendationSelect)) + geom_boxplot()+ theme(axis.title.x=element_blank(), axis.title.y = element_blank()) + scale_y_log10(labels=dollar) + ggtitle('Research Analyst')

othbox <- otherdf %>%
  ggplot(aes(y=CapSalary, x=LanguageRecommendationSelect)) + geom_boxplot()+ theme(axis.title.x=element_blank(), axis.title.y = element_blank()) + scale_y_log10(labels=dollar) + ggtitle('Other')


boxplot.job <- ggarrange(scibox, engbox, resbox, othbox,
          ncol = 2, nrow = 2) 

boxplot.final.job <- annotate_figure(boxplot.job, 
                top = text_grob("Boxplot Salary Compensation", color = "black", face = "bold", size = 14),
                bottom = text_grob("Language Preference", color = "black"),
                left = text_grob("Salary in USD", 
                                 color ="black", rot = 90))

boxplot.final.job


## ---- Q2_tests-for, message=F, warning=F--------------------------------------

# Bonferroni correction
bonferCorr <- 0.05/3

# Scientist datasets to test with Welch t-test
test.sci.pr <- t.test(scidf$CapSalary[scidf$LanguageRecommendationSelect=='Python'],scidf$CapSalary[scidf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

test.sci.ps <- t.test(scidf$CapSalary[scidf$LanguageRecommendationSelect=='Python'],scidf$CapSalary[scidf$LanguageRecommendationSelect=='SQL'],conf.level = 1 - bonferCorr)

test.sci.rs<- t.test(scidf$CapSalary[scidf$LanguageRecommendationSelect=='SQL'],scidf$CapSalary[scidf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

Adjusted.P.Value=c(test.sci.pr$p.value,test.sci.ps$p.value, test.sci.rs$p.value)
Reject.Null <- Adjusted.P.Value < bonferCorr
sciresult <- data.frame(Groups=c("Python - R","Python - SQL","R - SQL"),Adjusted.P.Value, Reject.Null)

grid.table(sciresult)

# Engineer datasets to test with Welch t-test
test.eng.pr <- t.test(engdf$CapSalary[engdf$LanguageRecommendationSelect=='Python'],engdf$CapSalary[engdf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

test.eng.ps <- t.test(engdf$CapSalary[engdf$LanguageRecommendationSelect=='Python'],engdf$CapSalary[engdf$LanguageRecommendationSelect=='SQL'],conf.level = 1 - bonferCorr)

test.eng.rs <- t.test(engdf$CapSalary[engdf$LanguageRecommendationSelect=='SQL'],engdf$CapSalary[engdf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

Adjusted.P.Value=c(test.eng.pr$p.value,test.eng.ps$p.value, test.eng.rs$p.value)
Reject.Null <- Adjusted.P.Value < bonferCorr
engresult <- data.frame(Groups=c("Python - R","Python - SQL","R - SQL"),Adjusted.P.Value, Reject.Null)

grid.table(engresult)

# Research Analyst datasets to test with Welch t-test
test.res.pr <- t.test(resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='Python'],resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

test.res.ps <- t.test(resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='Python'],resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='SQL'],conf.level = 1 - bonferCorr)

test.res.rs <- t.test(resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='SQL'],resanldf$CapSalary[resanldf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

Adjusted.P.Value=c(test.res.pr$p.value,test.res.ps$p.value, test.res.rs$p.value)
Reject.Null <- Adjusted.P.Value < bonferCorr
resresult <- data.frame(Groups=c("Python - R","Python - SQL","R - SQL"),Adjusted.P.Value, Reject.Null)

grid.table(resresult)


# Other datasets to test with Welch t-test
test.other.pr <- t.test(otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='Python'],otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

test.other.ps <- t.test(otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='Python'],otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='SQL'],conf.level = 1 - bonferCorr)

test.other.rs <- t.test(otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='SQL'],otherdf$CapSalary[otherdf$LanguageRecommendationSelect=='R'],conf.level = 1 - bonferCorr)

Adjusted.P.Value=c(test.other.pr$p.value,test.other.ps$p.value, test.other.rs$p.value)
Reject.Null <- Adjusted.P.Value < bonferCorr
otherresult <- data.frame(Groups=c("Python - R","Python - SQL","R - SQL"),Adjusted.P.Value, Reject.Null)

grid.table(otherresult)



## ---- Q2_glm-model, message=F, warning=F--------------------------------------
DSdata3 <- DSdata2[,]
DSdata3$JobTitleGroup <- relevel(as.factor(DSdata3$JobTitleGroup), ref = 'Scientist')

DSdata4 <- DSdata3[DSdata3$LanguageRecommendationSelect != "SQL",]

glm.gen.jobs <- summary(glm(log(CapSalary) ~ JobTitleGroup, data= DSdata3, family = poisson))

#grid.table(cbind(c("Engineer","Other","Research Analyst"),round((exp(glm.gen.jobs$coefficients[2:4,1])-1)*100,digits = 1)))

##########
glm.gen.lang <- summary(glm(CapSalary ~ LanguageRecommendationSelect, data= DSdata2, family = poisson))

#grid.table(cbind(c("R","SQL"),round((exp(glm.gen.lang$coefficients[2:3,1])-1)*100,digits = 1)))


## ---- Q2_glmjob-assumptions, echo=FALSE, warning=FALSE------------------------

par(mfrow=c(1,2),mar=c(5,4,4,1))

fitjob=glm(log(CapSalary) ~ JobTitleGroup, data= DSdata3, family = poisson)

scatter.smooth(fitjob$linear.predictors,residuals(fitjob,type="deviance"),cex=0.5,col="gray")
qqnorm(fitjob$residuals,main = "Normal Q-Q Plot: Job GLM")
qqline(fitjob$residuals, col='red')




## ---- Q2_glmlang-assumptions, echo=FALSE, warning=FALSE-----------------------

par(mfrow=c(1,2),mar=c(5,4,4,1))

fitlan=glm(log(CapSalary) ~ LanguageRecommendationSelect, data= DSdata2, family = poisson)

scatter.smooth(fitlan$linear.predictors,residuals(fitlan,type="deviance"),cex=0.5,col="gray")
qqnorm(fitlan$residuals,main = "Normal Q-Q Plot: Language GLM")
qqline(fitlan$residuals, col='red')




## ---- sorted-salary-plots-----------------------------------------------------

scidf %>%
     ggplot(aes(x=1:length(CapSalary),y=sort(CapSalary), color=LanguageRecommendationSelect)) + geom_point(position=position_jitter(h=0.1, w=0.1),alpha = 0.5)

engdf %>%
     ggplot(aes(x=1:length(CapSalary),y=sort(CapSalary), color=LanguageRecommendationSelect)) + geom_point(position=position_jitter(h=0.1, w=0.1),alpha = 0.5)

resanldf %>%
     ggplot(aes(x=1:length(CapSalary),y=sort(CapSalary), color=LanguageRecommendationSelect)) + geom_point(position=position_jitter(h=0.1, w=0.1),alpha = 0.5)

otherdf %>%
     ggplot(aes(x=1:length(CapSalary),y=sort(CapSalary), color=LanguageRecommendationSelect)) + geom_point(position=position_jitter(h=0.1, w=0.1),alpha = 0.5)

